/*
NOTES:
  Mobile ver: Trunk to left
  Desktop ver: Centred trunk with items on either side

  This file is styled mobile-first, and then the @media applies desktop styles
  Doing this helps to reduce edge cases where styles from both version get mixed together
*/
@use "../variables" as *;

.timeline-root {
  --trunk-width: 8px;
  --dot-diameter: 16px;
  --date-width: 6rem;
  --stem-height: 4px;
  --max-content-width: 600px;
  --mobile-padding: 10px;
  --stem-color: grey;

  @media (max-width: $bp-mobile) {
    --date-width: 4rem;
  }

  display: flex;
  flex-direction: column;
  position: relative;

  // Mobile ver
  padding: var(--mobile-padding);
}

.timeline-root::before {
  content: " ";
  width: var(--trunk-width);
  background: $lazulight-primary-color;
  position: absolute;
  top: 0;
  bottom: 0;

  // Mobile ver
  left: calc(var(--mobile-padding) - var(--trunk-width) / 2);
}

.timeline-items {
  display: flex;
  flex-direction: column;

  // Mobile ver
  align-items: flex-start;
}

.item-title {
  max-width: calc(
    min(var(--max-content-width) - 0.5rem, 100% - var(--date-width))
  );
  margin-bottom: 0.3rem;
  background: var(--stem-color);
  border-radius: 1rem;
  border: 3px solid $lazulight-primary-color;
  padding: 5px;
  text-align: center;
}

.message-row {
  display: flex;
  flex-direction: row;
  align-items: center;

  .item-date {
    flex-shrink: 0;
    text-align: center;
    width: var(--date-width);
    display: flex;
    flex-direction: column;
    height: calc(2rem + 4px + 10px);
    justify-content: center;
    background: var(--stem-color);
    border-radius: 1rem;
    border: 3px solid $lazulight-primary-color;
    padding: 5px;

    @media (max-width: $bp-mobile) {
      border-radius: 0.5rem;
    }
  }

  .content-box {
    border-radius: 0.5rem;
    padding: 1rem;
    max-width: calc(min(var(--max-content-width), 100% - var(--date-width)));
    overflow: auto;
    background: var(--stem-color);
    border: 3px solid $lazulight-primary-color;
  }
}

// YouTube videos don't have an inherent width (they'll default to the minimum possible width).
// Similar for Twitter embeds. So for those items we'll give a hint to be as wide as possible
.item.with-embed .content-box {
  width: var(--max-content-width);
}

.message-row::before {
  // Timeline dot
  content: " ";
  flex-shrink: 0;
  border-radius: 100%;
  background: white;
  border: 4px solid var(--stem-color);
  width: var(--dot-diameter);
  height: var(--dot-diameter);
  align-self: center;
  z-index: 1;
}

.item {
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 8rem;

  // Mobile Ver
  max-width: 100%;

  .message-row {
    flex-direction: row;

    &::before {
      margin-left: calc(-0.5 * var(--dot-diameter));
    }

    .item-date::after {
      margin-left: -4px;
    }
  }

  .item-title {
    margin-left: calc(var(--date-width) + (0.5 * var(--trunk-width)) + 0.5rem);
    word-break: break-word;
    hyphens: auto;
  }
}

.item + .item {
  margin-top: 2rem !important;
}

@media (min-width: 1200px) {
  .timeline-root {
    padding: unset;
  }

  // Center trunk
  .timeline-root::before {
    left: calc(50% - var(--trunk-width) / 2);
  }

  .timeline-items {
    align-items: center;
  }

  .item {
    max-width: calc(min(var(--max-content-width) + var(--date-width), 50%));
  }

  .item + .item {
    margin-top: -3rem !important;
  }

  // Make alternating timeline items point left/right
  .item:nth-child(2n) {
    // Items pointing right
    transform: translateX(50%);

    .message-row {
      flex-direction: row;

      &::before {
        margin-left: calc(-0.5 * var(--dot-diameter));
      }

      .item-date::after {
        margin-left: -4px;
      }
    }

    .item-title {
      margin-left: calc(var(--date-width) + var(--dot-diameter) / 2);
    }
  }

  .item:nth-child(2n + 1) {
    // Items pointing left
    transform: translateX(-50%);

    .message-row {
      flex-direction: row-reverse;

      &::before {
        margin-left: 0;
        margin-right: calc(-0.5 * var(--dot-diameter));
      }
    }

    .item-title {
      margin-left: 0;
      margin-right: calc(var(--date-width) + var(--dot-diameter) / 2);
    }
  }
}

/*
================
Embedded content
================
*/

// If we end up going with embedded HTML for tweets, use this for styling
// https://developer.twitter.com/en/docs/twitter-for-websites/embedded-tweets/guides/css-for-embedded-tweets

.youtube-container {
  position: relative;
  width: 100%;
  max-width: var(--max-content-width);
  aspect-ratio: 16 / 9;
}

.youtube-embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
}
