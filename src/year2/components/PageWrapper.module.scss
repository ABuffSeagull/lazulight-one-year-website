/* stylelint-disable keyframes-name-pattern */
// See https://github.com/stylelint/stylelint/issues/5997
@use "../variables" as *;
@use "sass:math";

.page-container {
  height: 100%;
  width: 100%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  max-width: 100vw;
  position: relative;
}

.page-bg-static {
  &-elira,
  &-finana,
  &-pomu,
  &-doujin,
  &-song,
  &-about,
  &-home {
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
  }

  &-elira {
    background-image: url("../assets/background/18.png");
    background-color: #274454; // Backup in case the image doesn't load
  }

  &-finana {
    background-image: url("../assets/background/18.png");
    background-color: #274454; // Backup in case the image doesn't load
  }

  &-pomu {
    background-image: url("../assets/background/18.png");
    background-color: #274454; // Backup in case the image doesn't load
  }

  &-home {
    background-image: url("../assets/background/18.png");
    background-color: #274454; // Backup in case the image doesn't load
  }
}

.page-bg-image {
  height: 30%;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  position: fixed;
}

.page-bg-filter {
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -100;

  &-top {
    filter: none;
  }

  &-scrolled {
    filter: blur(2px) brightness(40%) saturate(50%);
    opacity: 0.5;
  }
}

@mixin animation-core {
  position: fixed;
  animation-fill-mode: both;
  animation-iteration-count: infinite;
}

@mixin animation-standard {
  @include animation-core;

  animation-direction: normal;
  animation-timing-function: linear;
}

.page-bg-animation {
  &-liver {
    @include animation-core;

    animation-direction: alternate;
    animation-timing-function: ease-in-out;
    animation-name: liver;
    animation-delay: 0s;
    animation-duration: 5s;
    height: 30%;
    left: 50%;
    top: 50%;
  }

  @keyframes liver {
    // (Brandon) The order of transforms matters, relating to the coordinate system origin.
    // translate-before-rotate to ensure that the rotation is with respect the the centre of the translated image
    0% {
      transform: translate(-50%, -55%) rotate(-5deg);
    }

    50% {
      transform: translate(-50%, -45%) rotate(0deg);
    }

    100% {
      transform: translate(-50%, -55%) rotate(5deg);
    }
  }

  &-elira-a {
    @include animation-standard;

    animation-name: elira-a;
    animation-delay: 0s;
    animation-duration: 10s;
    height: 30%;
  }

  @keyframes elira-a {
    0%,
    80% {
      transform: rotate(0);
      left: 100%;
      top: 50%;
    }

    100% {
      display: none;
      transform: rotate(360deg);
      left: -50%;
      top: -20%;
    }
  }

  &-elira-b {
    @include animation-standard;

    animation-name: elira-b;
    animation-delay: -5s;
    animation-duration: 10s;
    height: 30%;
  }

  @keyframes elira-b {
    0%,
    80% {
      transform: rotate(0);
      left: 70%;
      top: 100%;
    }

    100% {
      display: none;
      transform: rotate(360deg);
      left: 30%;
      top: -50%;
    }
  }
}
