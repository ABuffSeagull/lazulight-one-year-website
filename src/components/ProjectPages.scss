@use "../variables" as *;
@use "sass:math";

.slideshow {
  // (Brandon) This fixes the slide vertical alignment
  &-container div {
    display: flex;
    margin: auto;
  }

  // (Brandon) Using " > div" to catch the element inside of the <Slider>
  // This excludes the buttons & dots from the mask
  // However, I imagine this may break in future versions of <Slider>
  &-container > div {
    $fade-left: 5%;
    $fade-right: 100% - $fade-left;

    mask-image: linear-gradient(
      to right,
      transparent,
      black $fade-left,
      black $fade-right,
      transparent
    );
  }

  &-slide {
    position: relative;
    margin: auto;
    width: 90%;

    // border: 3px solid $lazulight-primary-color;
    object-fit: contain;
    cursor: pointer;
  }
}

// 'video-container' class from https://coolestguidesontheplanet.com/videodrome/youtube/
.video-container {
  position: relative;
  padding-bottom: 56.25%;
  padding-top: 30px;
  height: 0;
  overflow: hidden;
}

.video-container iframe,
.video-container object,
.video-container embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.project {
  &-heading {
    &-image {
      width: 100%;
      max-width: 100%;
      margin: auto;
    }

    &-logo {
      width: 100%;
      max-width: 80%;
      margin: auto;
      object-position: top;
    }

    &-container {
      display: flex;
      gap: 2rem;
      justify-content: center;
      align-items: center;
      height: calc(100vh - 14rem); // Subtract height of menu elements

      @media (max-width: $bp-tablet) {
        height: calc(100vh - 6rem); // Subtract height of menu elements
      }

      @media (max-width: $bp-mobile) {
        flex-direction: column;
        gap: 0;
      }

      h1 {
        width: auto;
        margin: 0 0 0 2rem;
      }

      img,
      picture {
        width: auto;
        height: calc(100vh - 14rem);
        object-fit: contain;

        @media (max-width: $bp-tablet) {
          height: calc(100vh - 6rem);
        }

        @media (max-width: $bp-mobile) {
          height: calc((100vh - 6rem) * 0.7);
        }
      }
    }
  }

  &-description-container {
    padding-top: 3rem;

    h3 {
      font-size: 1.5rem;
    }

    h4 {
      font-size: 1.1rem;
    }
  }

  &-download-button {
    cursor: pointer;
    font-size: 1.25rem;
    padding: 0.25rem 0.5rem;
    background: $background-gradient;
    border-radius: 0.5rem;
    margin-top: 0.5rem;
    margin-right: 1rem;

    @media (max-width: 600px) {
      margin-right: 0;
    }
  }
}

.vn {
  &-profile-container {
    position: relative;
    width: 100%;
  }

  &-picture-box {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 20%;
    overflow-y: hidden;

    @media (max-width: $bp-tablet) {
      position: relative;
      width: auto;
      height: 40vh;
    }

    // This messes with the click to zoom function, but oh well
    // It still kind of works
    &-elira {
      overflow: hidden;

      picture,
      img {
        $elira-scale: 2.2;

        min-width: 100% * $elira-scale;
        height: auto;
        transform: translateX(math.div(50%, $elira-scale) - 50%);
      }
    }
  }

  &-info-container {
    width: 80%;
    margin-left: 20%;

    @media (max-width: $bp-tablet) {
      margin: 0;
      position: relative;
      display: flex;
      flex-direction: column;
      width: 100%;
      padding-right: 1rem;
      padding-left: 1rem;
    }
  }
}

.dcl-twerk {
  &-container {
    position: relative;
  }

  &-gif {
    position: absolute;
    width: 3rem;
    object-fit: contain;
    bottom: 0;
    right: 0;
  }
}

.credits {
  // Grid control based off
  // https://css-irl.info/controlling-leftover-grid-items/

  &-text {
    h3 {
      font-size: 2rem;
      text-align: center;
    }

    h4 {
      font-size: clamp(1rem, 2.3vw, 1.5rem);
      text-align: center;
    }

    ul {
      // Remove bullets
      list-style-type: none;
      display: grid;
      grid-template-columns: repeat(12, 1fr);
      gap: 1rem;
      flex: 1 1 auto;
      padding: 1rem;
      counter-reset: grid;
    }

    &-special-final li {
      // Important to override the high specificity
      grid-column: span 12 !important;
    }

    ul li {
      grid-column: span 4;

      // Dealing with 2 orphan items
      &:last-child:nth-child(3n - 1) {
        grid-column-end: -3;
      }

      &:nth-last-child(2):nth-child(3n + 1) {
        grid-column-end: 7;
      }

      // Dealing with single orphan
      &:last-child:nth-child(3n - 2) {
        grid-column-end: 9;
      }

      a {
        text-decoration: none;
      }

      a:visited {
        color: inherit;
      }

      a:link {
        color: inherit;
      }
    }

    @media (max-width: $bp-tablet) {
      ul li {
        grid-column: span 6;

        // Undo desktop selectors
        &:last-child:nth-child(3n - 1) {
          grid-column-end: auto;
        }

        &:nth-last-child(2):nth-child(3n + 1) {
          grid-column-end: auto;
        }

        &:last-child:nth-child(3n - 2) {
          grid-column-end: auto;
        }

        // Dealing with single orphan
        &:last-child:nth-child(2n - 1) {
          grid-column-end: 10;
        }
      }
    }
    @media (max-width: $bp-mobile) {
      ul li {
        grid-column: span 12;

        // Undo tablet selector
        &:last-child:nth-child(2n - 1) {
          grid-column-end: auto;
        }
      }
    }

    ul li p {
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      font-size: clamp(1rem, 2.3vw, 1.25rem);
      color: $background-grey;
      background: $lazulight-primary-color;
      border-radius: 0.5rem;
      padding: 1rem;
      height: 100%;
    }

    // ul li h4 {
    // Attempt to put h4 inside li to compress the VN credits, but difficult to get working nice
    // }
  }
}
